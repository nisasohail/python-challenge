{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# WeatherPy\n",
    "----\n",
    "\n",
    "#### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import time\n",
    "\n",
    "# Import API key\n",
    "from api_keys import api_key\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "import api_keys\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"output_data/cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Cities List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "620"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(low=-90.000, high=90.000, size=1500)\n",
    "lngs = np.random.uniform(low=-180.000, high=180.000, size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "len(cities)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform API Calls\n",
    "* Perform a weather check on each city using a series of successive API calls.\n",
    "* Include a print log of each city as it'sbeing processed (with the city number and city name).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# OpenWeatherMap API Key\n",
    "api_key =api_keys.api_key\n",
    "\n",
    "# Starting URL for Weather Map API Call\n",
    "url = \"http://api.openweathermap.org/data/2.5/weather?units=Imperial&APPID=\" + api_key"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert Raw Data to DataFrame\n",
    "* Export the city data into a .csv.\n",
    "* Display the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beginning Data Retrieval\n",
      "-------------------------------\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n",
      "City not found. Skipping...\n"
     ]
    }
   ],
   "source": [
    "# Create empty lists to append the API data into lists \n",
    "city_name = []\n",
    "cloudiness = []\n",
    "country = []\n",
    "date = []\n",
    "humidity = []\n",
    "lat = []\n",
    "lng = []\n",
    "max_temp = []\n",
    "wind_speed = []\n",
    "\n",
    "# Start the call counter \n",
    "record = 1\n",
    "\n",
    "# Log file print statement\n",
    "print(f\"Beginning Data Retrieval\")\n",
    "print(f\"-------------------------------\")\n",
    "\n",
    "#Loop through the cities in the city list \n",
    "for city in cities:  \n",
    "    \n",
    "    # Try statement to append calls where value is found \n",
    "    # Not all calls return data as OpenWeatherMap will not have have records in all the cities generated by CityPy module\n",
    "    try: \n",
    "        response = requests.get(f\"{url}&q={city}\").json() \n",
    "        city_name.append(response[\"name\"])\n",
    "        cloudiness.append(response[\"clouds\"][\"all\"])\n",
    "        country.append(response[\"sys\"][\"country\"])\n",
    "        date.append(response[\"dt\"])\n",
    "        humidity.append(response[\"main\"][\"humidity\"])\n",
    "        max_temp.append(response[\"main\"][\"temp_max\"])\n",
    "        lat.append(response[\"coord\"][\"lat\"])\n",
    "        lng.append(response[\"coord\"][\"lon\"])\n",
    "        wind_speed.append(response[\"wind\"][\"speed\"])\n",
    "        city_record = response[\"name\"]\n",
    "#         print(f\"Processing Record {record} | {city_record}\")\n",
    "#         print(f\"{url}&q={city}\")\n",
    "        \n",
    "        # Increase counter by one \n",
    "        record= record + 1\n",
    "        \n",
    "        # Wait a second in loop to not over exceed rate limit of API\n",
    "        time.sleep(1.01)\n",
    "        \n",
    "    # If no record found \"skip\" to next call\n",
    "    except:\n",
    "        print(\"City not found. Skipping...\")\n",
    "    continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "City          547\n",
       "Cloudiness    547\n",
       "Country       547\n",
       "Date          547\n",
       "Humidity      547\n",
       "Lat           547\n",
       "Lng           547\n",
       "Max Temp      547\n",
       "Wind Speed    547\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a dictonary with the lists generated\n",
    "weatherpy_dict = {\n",
    "    \"City\": city_name,\n",
    "    \"Cloudiness\":cloudiness, \n",
    "    \"Country\":country,\n",
    "    \"Date\":date, \n",
    "    \"Humidity\": humidity,\n",
    "    \"Lat\":lat, \n",
    "    \"Lng\":lng, \n",
    "    \"Max Temp\": max_temp,\n",
    "    \"Wind Speed\":wind_speed\n",
    "}\n",
    "\n",
    "# Create a data frame from dictionary\n",
    "weather_data = pd.DataFrame(weatherpy_dict)\n",
    "\n",
    "# Display count of weather data values \n",
    "weather_data.count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting the Data\n",
    "* Use proper labeling of the plots using plot titles (including date of analysis) and axes labels.\n",
    "* Save the plotted figures as .pngs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Country</th>\n",
       "      <th>Date</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lng</th>\n",
       "      <th>Max Temp</th>\n",
       "      <th>Wind Speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Saint-Philippe</td>\n",
       "      <td>1</td>\n",
       "      <td>CA</td>\n",
       "      <td>1563661027</td>\n",
       "      <td>62</td>\n",
       "      <td>45.36</td>\n",
       "      <td>-73.48</td>\n",
       "      <td>89.01</td>\n",
       "      <td>11.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Punta Arenas</td>\n",
       "      <td>75</td>\n",
       "      <td>CL</td>\n",
       "      <td>1563661029</td>\n",
       "      <td>74</td>\n",
       "      <td>-53.16</td>\n",
       "      <td>-70.91</td>\n",
       "      <td>37.40</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mahebourg</td>\n",
       "      <td>75</td>\n",
       "      <td>MU</td>\n",
       "      <td>1563661030</td>\n",
       "      <td>88</td>\n",
       "      <td>-20.41</td>\n",
       "      <td>57.70</td>\n",
       "      <td>70.00</td>\n",
       "      <td>3.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bismarck</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>1563660993</td>\n",
       "      <td>26</td>\n",
       "      <td>46.81</td>\n",
       "      <td>-100.78</td>\n",
       "      <td>80.60</td>\n",
       "      <td>6.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Port Lincoln</td>\n",
       "      <td>0</td>\n",
       "      <td>AU</td>\n",
       "      <td>1563660856</td>\n",
       "      <td>67</td>\n",
       "      <td>-34.72</td>\n",
       "      <td>135.86</td>\n",
       "      <td>57.04</td>\n",
       "      <td>24.07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             City  Cloudiness Country        Date  Humidity    Lat     Lng  \\\n",
       "0  Saint-Philippe           1      CA  1563661027        62  45.36  -73.48   \n",
       "1    Punta Arenas          75      CL  1563661029        74 -53.16  -70.91   \n",
       "2       Mahebourg          75      MU  1563661030        88 -20.41   57.70   \n",
       "3        Bismarck           1      US  1563660993        26  46.81 -100.78   \n",
       "4    Port Lincoln           0      AU  1563660856        67 -34.72  135.86   \n",
       "\n",
       "   Max Temp  Wind Speed  \n",
       "0     89.01       11.41  \n",
       "1     37.40       12.75  \n",
       "2     70.00        3.36  \n",
       "3     80.60        6.93  \n",
       "4     57.04       24.07  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Save data frame to CSV\n",
    "weather_data.to_csv(\"output_data/cities.csv\")\n",
    "\n",
    "# Display data frame head \n",
    "weather_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Humidity Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Build a scatter plot for each data type\n",
    "plt.scatter(weather_data[\"Lat\"], weather_data[\"Humidity\"], marker=\"o\", s=10)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Humidity\")\n",
    "plt.ylabel(\"Humidity (%)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Output_Plots/Humidity_vs_Latitude.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Build a scatter plot for each data type\n",
    "plt.scatter(weather_data[\"Lat\"], weather_data[\"Humidity\"], marker=\"o\", s=10)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Humidity\")\n",
    "plt.ylabel(\"Humidity (%)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Output_Plots/Humidity_vs_Latitude.png\")\n",
    "\n",
    "# Show plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Cloudiness Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Build a scatter plot for each data type\n",
    "plt.scatter(weather_data[\"Lat\"], weather_data[\"Cloudiness\"], marker=\"o\", s=10)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Cloudiness\")\n",
    "plt.ylabel(\"Cloudiness (%)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Output_Plots/Cloudiness_vs_Latitude.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Wind Speed Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Build a scatter plot for each data type\n",
    "plt.scatter(weather_data[\"Lat\"], weather_data[\"Wind Speed\"], marker=\"o\", s=10)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Wind Speed\")\n",
    "plt.ylabel(\"Wind Speed (mph)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Output_Plots/Wind_Speed_vs_Latitude.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "nteract": {
   "version": "0.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
